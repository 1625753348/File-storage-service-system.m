# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages

stages:          # List of stages for jobs, and their order of execution
  - build
  - deploy
  - clean

build-job:       # This job runs in the build stage, which runs first.
  stage: build
  tags:
    - default-shell
  only:
    - deploy
  script:
    - echo "Compiling the code..."
    - docker build -t sme/jsams/backend .
    - echo "Compile complete."

deploy-job:
  stage: deploy
  tags:
    - default-shell
  only:
    - deploy
  script:
    - echo "Restart the service..."
    - docker-compose --project-directory ./config -f ./config/jsams_api.yml -p jsams_api down
    - docker-compose --project-directory ./config -f ./config/jsams_api.yml -p jsams_api up -d
    - echo "Service restart complete."

clean-job:
  stage: clean
  tags:
    - default-shell
  only:
    - deploy
  script:
    - echo "Restart the service..."
    - docker rmi -f $(docker images | grep "none" | awk '{print $3}')
    - echo "Service restart complete."
